name: Build Wheels

on:
  workflow_dispatch:
  schedule:
    # Build weekly on Sundays
    - cron: "0 2 * * 0"

env:
  TORCH_CUDA_ARCH_LIST: "12.0"
  # RUNNER_TOOL_CACHE: "/tmp/tools"
  NVCC_FLAGS: "-allow-unsupported-compiler"
  UV_LINK_MODE: copy
jobs:
  setup-environment:
    name: Setup Build Environment
    runs-on: containers-runner
    outputs:
      python-version: ${{ steps.config.outputs.python-version }}
      cuda-version: ${{ steps.config.outputs.cuda-version }}
    steps:
      - id: config
        run: |
          echo "python-version=3.12" >> $GITHUB_OUTPUT
          echo "cuda-version=12.9.1" >> $GITHUB_OUTPUT

  build-flash-attn:
    name: Build flash-attn
    runs-on: containers-runner
    needs: setup-environment

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout flash-attn
        uses: actions/checkout@v4
        with:
          repository: "Dao-AILab/flash-attention"
          ref: "main"
          fetch-depth: 1
          submodules: recursive
          path: "flash-attn"

      - name: Setup Runner
        uses: ./.github/actions/setup-build-cuda
        with:
          python-version: ${{ needs.setup-environment.outputs.python-version }}
          working-directory: ./flash-attn

      - name: Build flash-attn wheel
        run: |
          cd flash-attn
          mkdir -p dist
          echo "TORCH_CUDA_ARCH_LIST: $TORCH_CUDA_ARCH_LIST"
          uv pip install setuptools wheel psutil ninja packaging
          uv build --wheel --no-build-isolation --verbose -o dist
        env:
          FLASH_ATTENTION_FORCE_BUILD: true
          FLASH_ATTN_CUDA_ARCHS: "120"

      - name: Upload flash-attn wheel
        uses: actions/upload-artifact@v4
        with:
          name: flash-attn-wheel
          path: flash-attn/dist/*.whl

  build-xformers:
    name: Build xformers (with flash-attn dependency)
    runs-on: containers-runner
    needs: [setup-environment, build-flash-attn]

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Checkout xformers
        uses: actions/checkout@v4
        with:
          repository: "facebookresearch/xformers"
          ref: "main"
          fetch-depth: 1
          submodules: recursive
          path: "xformers"

      - name: Setup Runner
        uses: ./.github/actions/setup-build-cuda
        with:
          python-version: ${{ needs.setup-environment.outputs.python-version }}
          working-directory: ./xformers

      - name: Download flash-attn wheel
        uses: actions/download-artifact@v4
        with:
          name: flash-attn-wheel
          path: flash-attn-wheel/

      - name: Install flash-attn dependency
        run: |
          FLASH_ATTN_WHEEL=$(find flash-attn-wheel -name "*.whl" | head -1)
          echo "Installing flash-attn wheel: $FLASH_ATTN_WHEEL"
          uv pip install "$FLASH_ATTN_WHEEL"

          uv pip install ninja packaging wheel setuptools

          # Verify installation
          uv run python -c "import flash_attn; print(f'flash-attn version: {flash_attn.__version__}')"

      - name: Build xformers wheel
        run: |
          cd xformers
          mkdir -p dist
          uv build --wheel --no-build-isolation --verbose -o dist

      - name: Upload xformers wheel
        uses: actions/upload-artifact@v4
        with:
          name: xformers-wheel
          path: xformers/dist/*.whl

  publish-container:
    needs: [setup-environment, build-flash-attn, build-xformers]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'

    permissions:
      contents: read
      packages: write

    steps:
      - name: Download all wheels
        uses: actions/download-artifact@v4
        with:
          pattern: "*-wheel"
          path: wheels/
          merge-multiple: true

      - name: Create wheel distribution container
        run: |
          # Create Dockerfile for wheel distribution
          cat > Dockerfile << 'EOF'
          FROM scratch
          COPY wheels/ /wheels/
          EOF

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push container
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: |
            ghcr.io/${{ github.repository }}/python-wheels:latest
